version: '3.7'

services:
  mysql:
    container_name: mysql
    build:
      context: ./code/database/
      dockerfile: Dockerfile
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - './db_data:/var/lib/mysql'
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - '-h'
        - localhost
      timeout: 5s
      retries: 160

  async:
    depends_on:
      mysql:
        condition: service_healthy
    container_name: async
    restart: always
    build:
      context: ./code/async
      dockerfile: Dockerfile
    environment:
      - ENV=production
      - PORT=8080
      - DATABASE_NAME=users_db
      - DATABASE_HOST=mysql
      - DATABASE_USER=root
      - DATABASE_PASSWORD=root
    ports:
      - '8080:8080'
    secrets:
      - ssl_cert
      - ssl_priv

  django:
    depends_on:
      mysql:
        condition: service_healthy
    container_name: django
    restart: always
    build:
      context: ./code/django
      dockerfile: Dockerfile
    environment:
      - ENV=production
      - PORT=8000
      - DATABASE_NAME=users_db
      - DATABASE_HOST=mysql
      - DATABASE_USER=root
      - DATABASE_PASSWORD=root
    ports:
      - '8000:8000'
    secrets:
      - ssl_cert
      - ssl_priv

  app:
    container_name: app
    restart: always
    build:
      context: ./code/app
      dockerfile: Dockerfile
    env_file: ./env/app.env
    ports:
      - '3000:3000'
    secrets:
      - ssl_cert
      - ssl_priv
 

secrets:
  ssl_cert:
    file: /etc/letsencrypt/live/chessverse.cloud-0003/fullchain.pem
  ssl_priv:
    file: /etc/letsencrypt/live/chessverse.cloud-0003/privkey.pem

networks:
  default:
    name: chessverse
